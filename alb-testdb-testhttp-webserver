#Application load balancer for testapp app server
resource "aws_lb" "front_end" {
  name               = "${var.project_name}-FE-ALB"
  #name               = "testapp-production"
  internal           = false
  load_balancer_type = "application"
  security_groups    = ["${aws_security_group.testapp-alb-sg-myapp.id}", "${aws_security_group.testapp-alb-sg-ulms.id}", "${aws_security_group.testapp-alb-sg-vrm.id}"]
  subnets            = ["${aws_subnet.public_subnet_3.id}", "${aws_subnet.public_subnet_2.id}","${aws_subnet.public_subnet_1.id}"]
  # set to true for production
  enable_deletion_protection = false

  depends_on = ["aws_s3_bucket.testapplblogs"]

  # enable for production env
  access_logs {
    bucket  = "${aws_s3_bucket.testapplblogs.bucket}"
    prefix  = "myapp-alb-logs"
    enabled = false
  }

  tags = {
    Environment = "Test Env"
  }
}

# Add Target Group

resource "aws_lb_target_group" "front_end" {
  name     = "Target-Group-for-frontend"
  port     = 80
  protocol = "HTTP"
  vpc_id   = "${aws_vpc.main.id}"
  health_check {
                path = "/"
                port = "80"
                protocol = "HTTP"
                healthy_threshold = 5
                unhealthy_threshold = 2
                interval = 30
                timeout = 5
                matcher = "200-308"
        }
}


# Adding HTTP listener for test only. Disable this for production

resource "aws_lb_listener" "front_end" {
  load_balancer_arn = "${aws_lb.front_end.arn}"
  port              = "80"
  protocol          = "HTTP"

  default_action {
    target_group_arn = "${aws_lb_target_group.front_end.arn}"
    type             = "forward"
  }
}


# To Use self signed certifiates in certificate directory

#resource "aws_iam_server_certificate" "url_myCompany_TestWebsite1" {
#  name      = "myCompanyTestWeb_site1.com"
#   certificate_body = "${file("certificates/ca-test-public.crt")}"
#   private_key      = "${file("certificates/ca-test-private-key.pem")}"
#}

# ENABLE HTTPS WITH THE CORRECT ARN FROM AWS
# Https lister, Enable certificate in lister
#resource "aws_lb_listener" "front_end" {
#  load_balancer_arn = "${aws_lb.front_end.arn}"
#  port              = "443"
#  protocol          = "HTTPS"
#  ssl_policy        = "ELBSecurityPolicy-2016-08"
#  # add correct entry from aws
  #certificate_arn   = "arn:aws:iam::187ddyy07283:server-certificate/test_cert_rab3sgfdfhdsfdyjjjn4jdj2tzu4"

  # if using self signe certificate, change certificate_arn above e.g
#  certificate_arn   = "${aws_iam_server_certificate.url_myCompany_TestWebsite1.arn}"
#
#  default_action {
#    type             = "forward"
#    target_group_arn = "${aws_lb_target_group.front_end.arn}"
#  }
#}



output "WebServer_Load_Balancer_Endpoint" {
  value = "${aws_lb.front_end.dns_name}"
}

